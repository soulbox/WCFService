//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ITS_ServerEntities : DbContext
    {
        public ITS_ServerEntities()
            : base("name=ITS_ServerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BildirmTipi> BildirmTipi { get; set; }
        public virtual DbSet<EczaDeposu> EczaDeposu { get; set; }
        public virtual DbSet<EtiketCihazı> EtiketCihazı { get; set; }
        public virtual DbSet<Etiketler> Etiketler { get; set; }
        public virtual DbSet<Firma> Firma { get; set; }
        public virtual DbSet<FirmaKoli> FirmaKoli { get; set; }
        public virtual DbSet<FirmaPalet> FirmaPalet { get; set; }
        public virtual DbSet<FirmaShrink> FirmaShrink { get; set; }
        public virtual DbSet<FirmaÜrün> FirmaÜrün { get; set; }
        public virtual DbSet<inkjet> inkjet { get; set; }
        public virtual DbSet<İşEmri> İşEmri { get; set; }
        public virtual DbSet<Kamera> Kamera { get; set; }
        public virtual DbSet<Makinalar> Makinalar { get; set; }
        public virtual DbSet<PLC> PLC { get; set; }
        public virtual DbSet<Satış> Satış { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Transfer> Transfer { get; set; }
        public virtual DbSet<UserMakina> UserMakina { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<Ürünler> Ürünler { get; set; }
        public virtual DbSet<KullanıcılarıAdSoyadaGöreListele> KullanıcılarıAdSoyadaGöreListele { get; set; }
        public virtual DbSet<işemriListele> işemriListele { get; set; }
    
        public virtual int ClienttenEklenenFirmaKoli(Nullable<int> işemriID, Nullable<int> paletID, Nullable<int> koliID, string etiket, Nullable<byte> makinaNo)
        {
            var işemriIDParameter = işemriID.HasValue ?
                new ObjectParameter("işemriID", işemriID) :
                new ObjectParameter("işemriID", typeof(int));
    
            var paletIDParameter = paletID.HasValue ?
                new ObjectParameter("PaletID", paletID) :
                new ObjectParameter("PaletID", typeof(int));
    
            var koliIDParameter = koliID.HasValue ?
                new ObjectParameter("KoliID", koliID) :
                new ObjectParameter("KoliID", typeof(int));
    
            var etiketParameter = etiket != null ?
                new ObjectParameter("Etiket", etiket) :
                new ObjectParameter("Etiket", typeof(string));
    
            var makinaNoParameter = makinaNo.HasValue ?
                new ObjectParameter("MakinaNo", makinaNo) :
                new ObjectParameter("MakinaNo", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClienttenEklenenFirmaKoli", işemriIDParameter, paletIDParameter, koliIDParameter, etiketParameter, makinaNoParameter);
        }
    
        public virtual int ClienttenEklenenFirmaPalet(Nullable<int> işemriID, Nullable<int> paletID, string etiket, Nullable<byte> makinaNo)
        {
            var işemriIDParameter = işemriID.HasValue ?
                new ObjectParameter("işemriID", işemriID) :
                new ObjectParameter("işemriID", typeof(int));
    
            var paletIDParameter = paletID.HasValue ?
                new ObjectParameter("PaletID", paletID) :
                new ObjectParameter("PaletID", typeof(int));
    
            var etiketParameter = etiket != null ?
                new ObjectParameter("Etiket", etiket) :
                new ObjectParameter("Etiket", typeof(string));
    
            var makinaNoParameter = makinaNo.HasValue ?
                new ObjectParameter("MakinaNo", makinaNo) :
                new ObjectParameter("MakinaNo", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClienttenEklenenFirmaPalet", işemriIDParameter, paletIDParameter, etiketParameter, makinaNoParameter);
        }
    
        public virtual int ClienttenEklenenFirmaShrink(Nullable<int> işemriID, Nullable<int> paletID, Nullable<int> koliID, Nullable<int> shrinkID, string etiket, Nullable<byte> makinaNo)
        {
            var işemriIDParameter = işemriID.HasValue ?
                new ObjectParameter("işemriID", işemriID) :
                new ObjectParameter("işemriID", typeof(int));
    
            var paletIDParameter = paletID.HasValue ?
                new ObjectParameter("PaletID", paletID) :
                new ObjectParameter("PaletID", typeof(int));
    
            var koliIDParameter = koliID.HasValue ?
                new ObjectParameter("KoliID", koliID) :
                new ObjectParameter("KoliID", typeof(int));
    
            var shrinkIDParameter = shrinkID.HasValue ?
                new ObjectParameter("ShrinkID", shrinkID) :
                new ObjectParameter("ShrinkID", typeof(int));
    
            var etiketParameter = etiket != null ?
                new ObjectParameter("Etiket", etiket) :
                new ObjectParameter("Etiket", typeof(string));
    
            var makinaNoParameter = makinaNo.HasValue ?
                new ObjectParameter("MakinaNo", makinaNo) :
                new ObjectParameter("MakinaNo", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClienttenEklenenFirmaShrink", işemriIDParameter, paletIDParameter, koliIDParameter, shrinkIDParameter, etiketParameter, makinaNoParameter);
        }
    
        public virtual int ClienttenEklenenFirmaürün(Nullable<int> işemriID, Nullable<int> paletID, Nullable<int> koliID, Nullable<int> shrinkID, string gTN, string sKT, string sN, string lOT, string shrinkKarekod, string koliKarekod, string paletKareKod, Nullable<System.DateTime> tarih, Nullable<int> userID, Nullable<byte> makinaNo)
        {
            var işemriIDParameter = işemriID.HasValue ?
                new ObjectParameter("işemriID", işemriID) :
                new ObjectParameter("işemriID", typeof(int));
    
            var paletIDParameter = paletID.HasValue ?
                new ObjectParameter("PaletID", paletID) :
                new ObjectParameter("PaletID", typeof(int));
    
            var koliIDParameter = koliID.HasValue ?
                new ObjectParameter("KoliID", koliID) :
                new ObjectParameter("KoliID", typeof(int));
    
            var shrinkIDParameter = shrinkID.HasValue ?
                new ObjectParameter("ShrinkID", shrinkID) :
                new ObjectParameter("ShrinkID", typeof(int));
    
            var gTNParameter = gTN != null ?
                new ObjectParameter("GTN", gTN) :
                new ObjectParameter("GTN", typeof(string));
    
            var sKTParameter = sKT != null ?
                new ObjectParameter("SKT", sKT) :
                new ObjectParameter("SKT", typeof(string));
    
            var sNParameter = sN != null ?
                new ObjectParameter("SN", sN) :
                new ObjectParameter("SN", typeof(string));
    
            var lOTParameter = lOT != null ?
                new ObjectParameter("LOT", lOT) :
                new ObjectParameter("LOT", typeof(string));
    
            var shrinkKarekodParameter = shrinkKarekod != null ?
                new ObjectParameter("ShrinkKarekod", shrinkKarekod) :
                new ObjectParameter("ShrinkKarekod", typeof(string));
    
            var koliKarekodParameter = koliKarekod != null ?
                new ObjectParameter("KoliKarekod", koliKarekod) :
                new ObjectParameter("KoliKarekod", typeof(string));
    
            var paletKareKodParameter = paletKareKod != null ?
                new ObjectParameter("PaletKareKod", paletKareKod) :
                new ObjectParameter("PaletKareKod", typeof(string));
    
            var tarihParameter = tarih.HasValue ?
                new ObjectParameter("Tarih", tarih) :
                new ObjectParameter("Tarih", typeof(System.DateTime));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var makinaNoParameter = makinaNo.HasValue ?
                new ObjectParameter("MakinaNo", makinaNo) :
                new ObjectParameter("MakinaNo", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClienttenEklenenFirmaürün", işemriIDParameter, paletIDParameter, koliIDParameter, shrinkIDParameter, gTNParameter, sKTParameter, sNParameter, lOTParameter, shrinkKarekodParameter, koliKarekodParameter, paletKareKodParameter, tarihParameter, userIDParameter, makinaNoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Deneme(Nullable<int> prmIsEmri)
        {
            var prmIsEmriParameter = prmIsEmri.HasValue ?
                new ObjectParameter("prmIsEmri", prmIsEmri) :
                new ObjectParameter("prmIsEmri", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Deneme", prmIsEmriParameter);
        }
    
        public virtual int EtiketCihazıEkle(string description, string iP, Nullable<int> port, Nullable<int> makinaNo)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var portParameter = port.HasValue ?
                new ObjectParameter("Port", port) :
                new ObjectParameter("Port", typeof(int));
    
            var makinaNoParameter = makinaNo.HasValue ?
                new ObjectParameter("MakinaNo", makinaNo) :
                new ObjectParameter("MakinaNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EtiketCihazıEkle", descriptionParameter, iPParameter, portParameter, makinaNoParameter);
        }
    
        public virtual int EtiketCihazıGüncelle(string description, string iP, Nullable<int> port, Nullable<int> makinaNo, Nullable<int> iD)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var portParameter = port.HasValue ?
                new ObjectParameter("Port", port) :
                new ObjectParameter("Port", typeof(int));
    
            var makinaNoParameter = makinaNo.HasValue ?
                new ObjectParameter("MakinaNo", makinaNo) :
                new ObjectParameter("MakinaNo", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EtiketCihazıGüncelle", descriptionParameter, iPParameter, portParameter, makinaNoParameter, iDParameter);
        }
    
        public virtual int EtiketCihazıSil(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EtiketCihazıSil", iDParameter);
        }
    
        public virtual int EtiketEkle(string açıklama, string etiketShrink, string etiketKoli, string etiketPalet, Nullable<int> etiketCihazıID)
        {
            var açıklamaParameter = açıklama != null ?
                new ObjectParameter("Açıklama", açıklama) :
                new ObjectParameter("Açıklama", typeof(string));
    
            var etiketShrinkParameter = etiketShrink != null ?
                new ObjectParameter("EtiketShrink", etiketShrink) :
                new ObjectParameter("EtiketShrink", typeof(string));
    
            var etiketKoliParameter = etiketKoli != null ?
                new ObjectParameter("EtiketKoli", etiketKoli) :
                new ObjectParameter("EtiketKoli", typeof(string));
    
            var etiketPaletParameter = etiketPalet != null ?
                new ObjectParameter("EtiketPalet", etiketPalet) :
                new ObjectParameter("EtiketPalet", typeof(string));
    
            var etiketCihazıIDParameter = etiketCihazıID.HasValue ?
                new ObjectParameter("EtiketCihazıID", etiketCihazıID) :
                new ObjectParameter("EtiketCihazıID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EtiketEkle", açıklamaParameter, etiketShrinkParameter, etiketKoliParameter, etiketPaletParameter, etiketCihazıIDParameter);
        }
    
        public virtual int EtiketGüncelle(string açıklama, string etiketShrink, string etiketKoli, string etiketPalet, Nullable<int> iD)
        {
            var açıklamaParameter = açıklama != null ?
                new ObjectParameter("Açıklama", açıklama) :
                new ObjectParameter("Açıklama", typeof(string));
    
            var etiketShrinkParameter = etiketShrink != null ?
                new ObjectParameter("EtiketShrink", etiketShrink) :
                new ObjectParameter("EtiketShrink", typeof(string));
    
            var etiketKoliParameter = etiketKoli != null ?
                new ObjectParameter("EtiketKoli", etiketKoli) :
                new ObjectParameter("EtiketKoli", typeof(string));
    
            var etiketPaletParameter = etiketPalet != null ?
                new ObjectParameter("EtiketPalet", etiketPalet) :
                new ObjectParameter("EtiketPalet", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EtiketGüncelle", açıklamaParameter, etiketShrinkParameter, etiketKoliParameter, etiketPaletParameter, iDParameter);
        }
    
        public virtual int EtiketSil(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EtiketSil", iDParameter);
        }
    
        public virtual int FirmaEkle(string firmaAdı, string firmaGLN, string iTSID, string iTSPW)
        {
            var firmaAdıParameter = firmaAdı != null ?
                new ObjectParameter("FirmaAdı", firmaAdı) :
                new ObjectParameter("FirmaAdı", typeof(string));
    
            var firmaGLNParameter = firmaGLN != null ?
                new ObjectParameter("FirmaGLN", firmaGLN) :
                new ObjectParameter("FirmaGLN", typeof(string));
    
            var iTSIDParameter = iTSID != null ?
                new ObjectParameter("ITSID", iTSID) :
                new ObjectParameter("ITSID", typeof(string));
    
            var iTSPWParameter = iTSPW != null ?
                new ObjectParameter("ITSPW", iTSPW) :
                new ObjectParameter("ITSPW", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FirmaEkle", firmaAdıParameter, firmaGLNParameter, iTSIDParameter, iTSPWParameter);
        }
    
        public virtual int FirmaGüncelle(string firmaAdı, string firmaGLN, string iTSID, string iTSPW, Nullable<int> iD)
        {
            var firmaAdıParameter = firmaAdı != null ?
                new ObjectParameter("FirmaAdı", firmaAdı) :
                new ObjectParameter("FirmaAdı", typeof(string));
    
            var firmaGLNParameter = firmaGLN != null ?
                new ObjectParameter("FirmaGLN", firmaGLN) :
                new ObjectParameter("FirmaGLN", typeof(string));
    
            var iTSIDParameter = iTSID != null ?
                new ObjectParameter("ITSID", iTSID) :
                new ObjectParameter("ITSID", typeof(string));
    
            var iTSPWParameter = iTSPW != null ?
                new ObjectParameter("ITSPW", iTSPW) :
                new ObjectParameter("ITSPW", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FirmaGüncelle", firmaAdıParameter, firmaGLNParameter, iTSIDParameter, iTSPWParameter, iDParameter);
        }
    
        public virtual int FirmaSil(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FirmaSil", iDParameter);
        }
    
        public virtual int inkjetEkle(string description, string cOM, Nullable<int> makinaNo)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var cOMParameter = cOM != null ?
                new ObjectParameter("COM", cOM) :
                new ObjectParameter("COM", typeof(string));
    
            var makinaNoParameter = makinaNo.HasValue ?
                new ObjectParameter("MakinaNo", makinaNo) :
                new ObjectParameter("MakinaNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("inkjetEkle", descriptionParameter, cOMParameter, makinaNoParameter);
        }
    
        public virtual int inkjetGüncelle(string description, string cOM, Nullable<int> makinaNo, Nullable<int> iD)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var cOMParameter = cOM != null ?
                new ObjectParameter("COM", cOM) :
                new ObjectParameter("COM", typeof(string));
    
            var makinaNoParameter = makinaNo.HasValue ?
                new ObjectParameter("MakinaNo", makinaNo) :
                new ObjectParameter("MakinaNo", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("inkjetGüncelle", descriptionParameter, cOMParameter, makinaNoParameter, iDParameter);
        }
    
        public virtual int inkjetSil(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("inkjetSil", iDParameter);
        }
    
        public virtual int insertingProc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertingProc");
        }
    
        public virtual int İşEmriEkle(string gTN, string sN, string lOT, Nullable<System.DateTime> sKT, Nullable<int> firmaID, Nullable<int> kameraID, Nullable<int> inkjetID, Nullable<int> etiketCihazı, Nullable<int> etiketId, Nullable<int> pLCID, Nullable<int> firmanınÜrünüID, Nullable<int> makinaNo, Nullable<bool> shrinkEtiketi, Nullable<bool> koliEtiketi, Nullable<bool> paletEtiketi, Nullable<int> üretimMiktarı, Nullable<System.DateTime> işemriTarihi, Nullable<bool> ihracat, Nullable<System.DateTime> mFG)
        {
            var gTNParameter = gTN != null ?
                new ObjectParameter("GTN", gTN) :
                new ObjectParameter("GTN", typeof(string));
    
            var sNParameter = sN != null ?
                new ObjectParameter("SN", sN) :
                new ObjectParameter("SN", typeof(string));
    
            var lOTParameter = lOT != null ?
                new ObjectParameter("LOT", lOT) :
                new ObjectParameter("LOT", typeof(string));
    
            var sKTParameter = sKT.HasValue ?
                new ObjectParameter("SKT", sKT) :
                new ObjectParameter("SKT", typeof(System.DateTime));
    
            var firmaIDParameter = firmaID.HasValue ?
                new ObjectParameter("FirmaID", firmaID) :
                new ObjectParameter("FirmaID", typeof(int));
    
            var kameraIDParameter = kameraID.HasValue ?
                new ObjectParameter("KameraID", kameraID) :
                new ObjectParameter("KameraID", typeof(int));
    
            var inkjetIDParameter = inkjetID.HasValue ?
                new ObjectParameter("inkjetID", inkjetID) :
                new ObjectParameter("inkjetID", typeof(int));
    
            var etiketCihazıParameter = etiketCihazı.HasValue ?
                new ObjectParameter("EtiketCihazı", etiketCihazı) :
                new ObjectParameter("EtiketCihazı", typeof(int));
    
            var etiketIdParameter = etiketId.HasValue ?
                new ObjectParameter("EtiketId", etiketId) :
                new ObjectParameter("EtiketId", typeof(int));
    
            var pLCIDParameter = pLCID.HasValue ?
                new ObjectParameter("PLCID", pLCID) :
                new ObjectParameter("PLCID", typeof(int));
    
            var firmanınÜrünüIDParameter = firmanınÜrünüID.HasValue ?
                new ObjectParameter("FirmanınÜrünüID", firmanınÜrünüID) :
                new ObjectParameter("FirmanınÜrünüID", typeof(int));
    
            var makinaNoParameter = makinaNo.HasValue ?
                new ObjectParameter("MakinaNo", makinaNo) :
                new ObjectParameter("MakinaNo", typeof(int));
    
            var shrinkEtiketiParameter = shrinkEtiketi.HasValue ?
                new ObjectParameter("ShrinkEtiketi", shrinkEtiketi) :
                new ObjectParameter("ShrinkEtiketi", typeof(bool));
    
            var koliEtiketiParameter = koliEtiketi.HasValue ?
                new ObjectParameter("KoliEtiketi", koliEtiketi) :
                new ObjectParameter("KoliEtiketi", typeof(bool));
    
            var paletEtiketiParameter = paletEtiketi.HasValue ?
                new ObjectParameter("PaletEtiketi", paletEtiketi) :
                new ObjectParameter("PaletEtiketi", typeof(bool));
    
            var üretimMiktarıParameter = üretimMiktarı.HasValue ?
                new ObjectParameter("ÜretimMiktarı", üretimMiktarı) :
                new ObjectParameter("ÜretimMiktarı", typeof(int));
    
            var işemriTarihiParameter = işemriTarihi.HasValue ?
                new ObjectParameter("işemriTarihi", işemriTarihi) :
                new ObjectParameter("işemriTarihi", typeof(System.DateTime));
    
            var ihracatParameter = ihracat.HasValue ?
                new ObjectParameter("ihracat", ihracat) :
                new ObjectParameter("ihracat", typeof(bool));
    
            var mFGParameter = mFG.HasValue ?
                new ObjectParameter("MFG", mFG) :
                new ObjectParameter("MFG", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("İşEmriEkle", gTNParameter, sNParameter, lOTParameter, sKTParameter, firmaIDParameter, kameraIDParameter, inkjetIDParameter, etiketCihazıParameter, etiketIdParameter, pLCIDParameter, firmanınÜrünüIDParameter, makinaNoParameter, shrinkEtiketiParameter, koliEtiketiParameter, paletEtiketiParameter, üretimMiktarıParameter, işemriTarihiParameter, ihracatParameter, mFGParameter);
        }
    
        public virtual int İşEmriEkleWithID(Nullable<int> işemriId, string gTN, Nullable<long> sN, string lOT, Nullable<System.DateTime> sKT, Nullable<int> firmaID, Nullable<int> kameraID, Nullable<int> inkjetID, Nullable<int> etiketCihazıId, Nullable<int> etiketId, Nullable<int> pLCID, Nullable<int> firmanınÜrünüID, Nullable<int> makinaNo, Nullable<int> üretimMiktarı, Nullable<System.DateTime> işemriTarihi, Nullable<long> maxsn)
        {
            var işemriIdParameter = işemriId.HasValue ?
                new ObjectParameter("işemriId", işemriId) :
                new ObjectParameter("işemriId", typeof(int));
    
            var gTNParameter = gTN != null ?
                new ObjectParameter("GTN", gTN) :
                new ObjectParameter("GTN", typeof(string));
    
            var sNParameter = sN.HasValue ?
                new ObjectParameter("SN", sN) :
                new ObjectParameter("SN", typeof(long));
    
            var lOTParameter = lOT != null ?
                new ObjectParameter("LOT", lOT) :
                new ObjectParameter("LOT", typeof(string));
    
            var sKTParameter = sKT.HasValue ?
                new ObjectParameter("SKT", sKT) :
                new ObjectParameter("SKT", typeof(System.DateTime));
    
            var firmaIDParameter = firmaID.HasValue ?
                new ObjectParameter("FirmaID", firmaID) :
                new ObjectParameter("FirmaID", typeof(int));
    
            var kameraIDParameter = kameraID.HasValue ?
                new ObjectParameter("KameraID", kameraID) :
                new ObjectParameter("KameraID", typeof(int));
    
            var inkjetIDParameter = inkjetID.HasValue ?
                new ObjectParameter("inkjetID", inkjetID) :
                new ObjectParameter("inkjetID", typeof(int));
    
            var etiketCihazıIdParameter = etiketCihazıId.HasValue ?
                new ObjectParameter("EtiketCihazıId", etiketCihazıId) :
                new ObjectParameter("EtiketCihazıId", typeof(int));
    
            var etiketIdParameter = etiketId.HasValue ?
                new ObjectParameter("EtiketId", etiketId) :
                new ObjectParameter("EtiketId", typeof(int));
    
            var pLCIDParameter = pLCID.HasValue ?
                new ObjectParameter("PLCID", pLCID) :
                new ObjectParameter("PLCID", typeof(int));
    
            var firmanınÜrünüIDParameter = firmanınÜrünüID.HasValue ?
                new ObjectParameter("FirmanınÜrünüID", firmanınÜrünüID) :
                new ObjectParameter("FirmanınÜrünüID", typeof(int));
    
            var makinaNoParameter = makinaNo.HasValue ?
                new ObjectParameter("MakinaNo", makinaNo) :
                new ObjectParameter("MakinaNo", typeof(int));
    
            var üretimMiktarıParameter = üretimMiktarı.HasValue ?
                new ObjectParameter("ÜretimMiktarı", üretimMiktarı) :
                new ObjectParameter("ÜretimMiktarı", typeof(int));
    
            var işemriTarihiParameter = işemriTarihi.HasValue ?
                new ObjectParameter("işemriTarihi", işemriTarihi) :
                new ObjectParameter("işemriTarihi", typeof(System.DateTime));
    
            var maxsnParameter = maxsn.HasValue ?
                new ObjectParameter("Maxsn", maxsn) :
                new ObjectParameter("Maxsn", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("İşEmriEkleWithID", işemriIdParameter, gTNParameter, sNParameter, lOTParameter, sKTParameter, firmaIDParameter, kameraIDParameter, inkjetIDParameter, etiketCihazıIdParameter, etiketIdParameter, pLCIDParameter, firmanınÜrünüIDParameter, makinaNoParameter, üretimMiktarıParameter, işemriTarihiParameter, maxsnParameter);
        }
    
        public virtual int İşEmriGüncelle(string gTN, string sN, string lOT, Nullable<System.DateTime> sKT, Nullable<int> firmaID, Nullable<int> kameraID, Nullable<int> inkjetID, Nullable<int> etiketCihazı, Nullable<int> etiketId, Nullable<int> pLCID, Nullable<int> firmanınÜrünüID, Nullable<int> makinaNo, Nullable<bool> shrinkEtiketi, Nullable<bool> koliEtiketi, Nullable<bool> paletEtiketi, Nullable<bool> ihracat, Nullable<int> üretimMiktarı, Nullable<System.DateTime> mFG, Nullable<int> iD)
        {
            var gTNParameter = gTN != null ?
                new ObjectParameter("GTN", gTN) :
                new ObjectParameter("GTN", typeof(string));
    
            var sNParameter = sN != null ?
                new ObjectParameter("SN", sN) :
                new ObjectParameter("SN", typeof(string));
    
            var lOTParameter = lOT != null ?
                new ObjectParameter("LOT", lOT) :
                new ObjectParameter("LOT", typeof(string));
    
            var sKTParameter = sKT.HasValue ?
                new ObjectParameter("SKT", sKT) :
                new ObjectParameter("SKT", typeof(System.DateTime));
    
            var firmaIDParameter = firmaID.HasValue ?
                new ObjectParameter("FirmaID", firmaID) :
                new ObjectParameter("FirmaID", typeof(int));
    
            var kameraIDParameter = kameraID.HasValue ?
                new ObjectParameter("KameraID", kameraID) :
                new ObjectParameter("KameraID", typeof(int));
    
            var inkjetIDParameter = inkjetID.HasValue ?
                new ObjectParameter("inkjetID", inkjetID) :
                new ObjectParameter("inkjetID", typeof(int));
    
            var etiketCihazıParameter = etiketCihazı.HasValue ?
                new ObjectParameter("EtiketCihazı", etiketCihazı) :
                new ObjectParameter("EtiketCihazı", typeof(int));
    
            var etiketIdParameter = etiketId.HasValue ?
                new ObjectParameter("EtiketId", etiketId) :
                new ObjectParameter("EtiketId", typeof(int));
    
            var pLCIDParameter = pLCID.HasValue ?
                new ObjectParameter("PLCID", pLCID) :
                new ObjectParameter("PLCID", typeof(int));
    
            var firmanınÜrünüIDParameter = firmanınÜrünüID.HasValue ?
                new ObjectParameter("FirmanınÜrünüID", firmanınÜrünüID) :
                new ObjectParameter("FirmanınÜrünüID", typeof(int));
    
            var makinaNoParameter = makinaNo.HasValue ?
                new ObjectParameter("MakinaNo", makinaNo) :
                new ObjectParameter("MakinaNo", typeof(int));
    
            var shrinkEtiketiParameter = shrinkEtiketi.HasValue ?
                new ObjectParameter("ShrinkEtiketi", shrinkEtiketi) :
                new ObjectParameter("ShrinkEtiketi", typeof(bool));
    
            var koliEtiketiParameter = koliEtiketi.HasValue ?
                new ObjectParameter("KoliEtiketi", koliEtiketi) :
                new ObjectParameter("KoliEtiketi", typeof(bool));
    
            var paletEtiketiParameter = paletEtiketi.HasValue ?
                new ObjectParameter("PaletEtiketi", paletEtiketi) :
                new ObjectParameter("PaletEtiketi", typeof(bool));
    
            var ihracatParameter = ihracat.HasValue ?
                new ObjectParameter("ihracat", ihracat) :
                new ObjectParameter("ihracat", typeof(bool));
    
            var üretimMiktarıParameter = üretimMiktarı.HasValue ?
                new ObjectParameter("ÜretimMiktarı", üretimMiktarı) :
                new ObjectParameter("ÜretimMiktarı", typeof(int));
    
            var mFGParameter = mFG.HasValue ?
                new ObjectParameter("MFG", mFG) :
                new ObjectParameter("MFG", typeof(System.DateTime));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("İşEmriGüncelle", gTNParameter, sNParameter, lOTParameter, sKTParameter, firmaIDParameter, kameraIDParameter, inkjetIDParameter, etiketCihazıParameter, etiketIdParameter, pLCIDParameter, firmanınÜrünüIDParameter, makinaNoParameter, shrinkEtiketiParameter, koliEtiketiParameter, paletEtiketiParameter, ihracatParameter, üretimMiktarıParameter, mFGParameter, iDParameter);
        }
    
        public virtual int İşEmriSil(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("İşEmriSil", iDParameter);
        }
    
        public virtual int KameraEkle(string description, string iP, Nullable<int> port, Nullable<int> makinaNo)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var portParameter = port.HasValue ?
                new ObjectParameter("Port", port) :
                new ObjectParameter("Port", typeof(int));
    
            var makinaNoParameter = makinaNo.HasValue ?
                new ObjectParameter("MakinaNo", makinaNo) :
                new ObjectParameter("MakinaNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KameraEkle", descriptionParameter, iPParameter, portParameter, makinaNoParameter);
        }
    
        public virtual int KameraGüncelle(string description, string iP, Nullable<int> port, Nullable<int> makinaNo, Nullable<int> iD)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var portParameter = port.HasValue ?
                new ObjectParameter("Port", port) :
                new ObjectParameter("Port", typeof(int));
    
            var makinaNoParameter = makinaNo.HasValue ?
                new ObjectParameter("MakinaNo", makinaNo) :
                new ObjectParameter("MakinaNo", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KameraGüncelle", descriptionParameter, iPParameter, portParameter, makinaNoParameter, iDParameter);
        }
    
        public virtual int KameraSil(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KameraSil", iDParameter);
        }
    
        public virtual int KarmaKoliOluştur(Nullable<int> isemriID, string firmaGLN, Nullable<int> satışID, ObjectParameter etiket)
        {
            var isemriIDParameter = isemriID.HasValue ?
                new ObjectParameter("isemriID", isemriID) :
                new ObjectParameter("isemriID", typeof(int));
    
            var firmaGLNParameter = firmaGLN != null ?
                new ObjectParameter("firmaGLN", firmaGLN) :
                new ObjectParameter("firmaGLN", typeof(string));
    
            var satışIDParameter = satışID.HasValue ?
                new ObjectParameter("satışID", satışID) :
                new ObjectParameter("satışID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KarmaKoliOluştur", isemriIDParameter, firmaGLNParameter, satışIDParameter, etiket);
        }
    
        public virtual int KullanıcıEkle(string kullanıcıAdı, string kullanıcıŞifresi, string görevi, Nullable<bool> yönetici, string adı, string soyadı, string eposta, string tel)
        {
            var kullanıcıAdıParameter = kullanıcıAdı != null ?
                new ObjectParameter("KullanıcıAdı", kullanıcıAdı) :
                new ObjectParameter("KullanıcıAdı", typeof(string));
    
            var kullanıcıŞifresiParameter = kullanıcıŞifresi != null ?
                new ObjectParameter("KullanıcıŞifresi", kullanıcıŞifresi) :
                new ObjectParameter("KullanıcıŞifresi", typeof(string));
    
            var göreviParameter = görevi != null ?
                new ObjectParameter("görevi", görevi) :
                new ObjectParameter("görevi", typeof(string));
    
            var yöneticiParameter = yönetici.HasValue ?
                new ObjectParameter("Yönetici", yönetici) :
                new ObjectParameter("Yönetici", typeof(bool));
    
            var adıParameter = adı != null ?
                new ObjectParameter("Adı", adı) :
                new ObjectParameter("Adı", typeof(string));
    
            var soyadıParameter = soyadı != null ?
                new ObjectParameter("Soyadı", soyadı) :
                new ObjectParameter("Soyadı", typeof(string));
    
            var epostaParameter = eposta != null ?
                new ObjectParameter("eposta", eposta) :
                new ObjectParameter("eposta", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KullanıcıEkle", kullanıcıAdıParameter, kullanıcıŞifresiParameter, göreviParameter, yöneticiParameter, adıParameter, soyadıParameter, epostaParameter, telParameter);
        }
    
        public virtual int KullanıcıGüncelle(string kullanıcıAdı, string kullanıcıŞifresi, string görevi, Nullable<bool> yönetici, string adı, string soyadı, string eposta, string tel, Nullable<int> id)
        {
            var kullanıcıAdıParameter = kullanıcıAdı != null ?
                new ObjectParameter("KullanıcıAdı", kullanıcıAdı) :
                new ObjectParameter("KullanıcıAdı", typeof(string));
    
            var kullanıcıŞifresiParameter = kullanıcıŞifresi != null ?
                new ObjectParameter("KullanıcıŞifresi", kullanıcıŞifresi) :
                new ObjectParameter("KullanıcıŞifresi", typeof(string));
    
            var göreviParameter = görevi != null ?
                new ObjectParameter("görevi", görevi) :
                new ObjectParameter("görevi", typeof(string));
    
            var yöneticiParameter = yönetici.HasValue ?
                new ObjectParameter("Yönetici", yönetici) :
                new ObjectParameter("Yönetici", typeof(bool));
    
            var adıParameter = adı != null ?
                new ObjectParameter("Adı", adı) :
                new ObjectParameter("Adı", typeof(string));
    
            var soyadıParameter = soyadı != null ?
                new ObjectParameter("Soyadı", soyadı) :
                new ObjectParameter("Soyadı", typeof(string));
    
            var epostaParameter = eposta != null ?
                new ObjectParameter("eposta", eposta) :
                new ObjectParameter("eposta", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KullanıcıGüncelle", kullanıcıAdıParameter, kullanıcıŞifresiParameter, göreviParameter, yöneticiParameter, adıParameter, soyadıParameter, epostaParameter, telParameter, idParameter);
        }
    
        public virtual int KullanıcıMakinaEkle(Nullable<int> makinaID, Nullable<int> userId)
        {
            var makinaIDParameter = makinaID.HasValue ?
                new ObjectParameter("MakinaID", makinaID) :
                new ObjectParameter("MakinaID", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KullanıcıMakinaEkle", makinaIDParameter, userIdParameter);
        }
    
        public virtual int KullanıcıMakinaGüncelle(Nullable<int> makinaID, Nullable<int> userId, Nullable<int> id)
        {
            var makinaIDParameter = makinaID.HasValue ?
                new ObjectParameter("MakinaID", makinaID) :
                new ObjectParameter("MakinaID", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KullanıcıMakinaGüncelle", makinaIDParameter, userIdParameter, idParameter);
        }
    
        public virtual int KullanıcıMakinaSil(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KullanıcıMakinaSil", idParameter);
        }
    
        public virtual int KullanıcıSil(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KullanıcıSil", idParameter);
        }
    
        public virtual int MakinaEkle(Nullable<byte> makinaNo, string hWID, string açıklama, string makinaIP)
        {
            var makinaNoParameter = makinaNo.HasValue ?
                new ObjectParameter("MakinaNo", makinaNo) :
                new ObjectParameter("MakinaNo", typeof(byte));
    
            var hWIDParameter = hWID != null ?
                new ObjectParameter("HWID", hWID) :
                new ObjectParameter("HWID", typeof(string));
    
            var açıklamaParameter = açıklama != null ?
                new ObjectParameter("Açıklama", açıklama) :
                new ObjectParameter("Açıklama", typeof(string));
    
            var makinaIPParameter = makinaIP != null ?
                new ObjectParameter("MakinaIP", makinaIP) :
                new ObjectParameter("MakinaIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MakinaEkle", makinaNoParameter, hWIDParameter, açıklamaParameter, makinaIPParameter);
        }
    
        public virtual int MakinaGüncelle(Nullable<byte> makinaNo, string hWID, string açıklama, string makinaIP, Nullable<int> id)
        {
            var makinaNoParameter = makinaNo.HasValue ?
                new ObjectParameter("MakinaNo", makinaNo) :
                new ObjectParameter("MakinaNo", typeof(byte));
    
            var hWIDParameter = hWID != null ?
                new ObjectParameter("HWID", hWID) :
                new ObjectParameter("HWID", typeof(string));
    
            var açıklamaParameter = açıklama != null ?
                new ObjectParameter("Açıklama", açıklama) :
                new ObjectParameter("Açıklama", typeof(string));
    
            var makinaIPParameter = makinaIP != null ?
                new ObjectParameter("MakinaIP", makinaIP) :
                new ObjectParameter("MakinaIP", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MakinaGüncelle", makinaNoParameter, hWIDParameter, açıklamaParameter, makinaIPParameter, idParameter);
        }
    
        public virtual int MakinaSil(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MakinaSil", idParameter);
        }
    
        public virtual int PLCEkle(string description, string iP, Nullable<int> port, Nullable<int> makinaNo)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var portParameter = port.HasValue ?
                new ObjectParameter("Port", port) :
                new ObjectParameter("Port", typeof(int));
    
            var makinaNoParameter = makinaNo.HasValue ?
                new ObjectParameter("MakinaNo", makinaNo) :
                new ObjectParameter("MakinaNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PLCEkle", descriptionParameter, iPParameter, portParameter, makinaNoParameter);
        }
    
        public virtual int PLCGüncelle(string description, string iP, Nullable<int> port, Nullable<int> makinaNo, Nullable<int> iD)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var portParameter = port.HasValue ?
                new ObjectParameter("Port", port) :
                new ObjectParameter("Port", typeof(int));
    
            var makinaNoParameter = makinaNo.HasValue ?
                new ObjectParameter("MakinaNo", makinaNo) :
                new ObjectParameter("MakinaNo", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PLCGüncelle", descriptionParameter, iPParameter, portParameter, makinaNoParameter, iDParameter);
        }
    
        public virtual int PLCSil(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PLCSil", iDParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_KontrolBasamagı(string deger, ObjectParameter çıktı)
        {
            var degerParameter = deger != null ?
                new ObjectParameter("Deger", deger) :
                new ObjectParameter("Deger", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_KontrolBasamagı", degerParameter, çıktı);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int Test(Nullable<int> denem)
        {
            var denemParameter = denem.HasValue ?
                new ObjectParameter("denem", denem) :
                new ObjectParameter("denem", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Test", denemParameter);
        }
    
        public virtual int ÜrünlerEkle(string ürünAdı, string gTIN, Nullable<int> barcodeSize, string sKT_X, string sKT_Y, string lOT_X, string lOT_Y, string gTIN_X, string gTIN_Y, string sN_X, string sN_Y, string gecikme, string sKT_FONT, string sN_FONT, string lOT_FONT, string gTIN_FONT, Nullable<int> kolidekiShrink, Nullable<int> shrinkdekiÜrün, Nullable<int> palettekiKoli, Nullable<int> firmaID)
        {
            var ürünAdıParameter = ürünAdı != null ?
                new ObjectParameter("ÜrünAdı", ürünAdı) :
                new ObjectParameter("ÜrünAdı", typeof(string));
    
            var gTINParameter = gTIN != null ?
                new ObjectParameter("GTIN", gTIN) :
                new ObjectParameter("GTIN", typeof(string));
    
            var barcodeSizeParameter = barcodeSize.HasValue ?
                new ObjectParameter("BarcodeSize", barcodeSize) :
                new ObjectParameter("BarcodeSize", typeof(int));
    
            var sKT_XParameter = sKT_X != null ?
                new ObjectParameter("SKT_X", sKT_X) :
                new ObjectParameter("SKT_X", typeof(string));
    
            var sKT_YParameter = sKT_Y != null ?
                new ObjectParameter("SKT_Y", sKT_Y) :
                new ObjectParameter("SKT_Y", typeof(string));
    
            var lOT_XParameter = lOT_X != null ?
                new ObjectParameter("LOT_X", lOT_X) :
                new ObjectParameter("LOT_X", typeof(string));
    
            var lOT_YParameter = lOT_Y != null ?
                new ObjectParameter("LOT_Y", lOT_Y) :
                new ObjectParameter("LOT_Y", typeof(string));
    
            var gTIN_XParameter = gTIN_X != null ?
                new ObjectParameter("GTIN_X", gTIN_X) :
                new ObjectParameter("GTIN_X", typeof(string));
    
            var gTIN_YParameter = gTIN_Y != null ?
                new ObjectParameter("GTIN_Y", gTIN_Y) :
                new ObjectParameter("GTIN_Y", typeof(string));
    
            var sN_XParameter = sN_X != null ?
                new ObjectParameter("SN_X", sN_X) :
                new ObjectParameter("SN_X", typeof(string));
    
            var sN_YParameter = sN_Y != null ?
                new ObjectParameter("SN_Y", sN_Y) :
                new ObjectParameter("SN_Y", typeof(string));
    
            var gecikmeParameter = gecikme != null ?
                new ObjectParameter("Gecikme", gecikme) :
                new ObjectParameter("Gecikme", typeof(string));
    
            var sKT_FONTParameter = sKT_FONT != null ?
                new ObjectParameter("SKT_FONT", sKT_FONT) :
                new ObjectParameter("SKT_FONT", typeof(string));
    
            var sN_FONTParameter = sN_FONT != null ?
                new ObjectParameter("SN_FONT", sN_FONT) :
                new ObjectParameter("SN_FONT", typeof(string));
    
            var lOT_FONTParameter = lOT_FONT != null ?
                new ObjectParameter("LOT_FONT", lOT_FONT) :
                new ObjectParameter("LOT_FONT", typeof(string));
    
            var gTIN_FONTParameter = gTIN_FONT != null ?
                new ObjectParameter("GTIN_FONT", gTIN_FONT) :
                new ObjectParameter("GTIN_FONT", typeof(string));
    
            var kolidekiShrinkParameter = kolidekiShrink.HasValue ?
                new ObjectParameter("KolidekiShrink", kolidekiShrink) :
                new ObjectParameter("KolidekiShrink", typeof(int));
    
            var shrinkdekiÜrünParameter = shrinkdekiÜrün.HasValue ?
                new ObjectParameter("ShrinkdekiÜrün", shrinkdekiÜrün) :
                new ObjectParameter("ShrinkdekiÜrün", typeof(int));
    
            var palettekiKoliParameter = palettekiKoli.HasValue ?
                new ObjectParameter("PalettekiKoli", palettekiKoli) :
                new ObjectParameter("PalettekiKoli", typeof(int));
    
            var firmaIDParameter = firmaID.HasValue ?
                new ObjectParameter("FirmaID", firmaID) :
                new ObjectParameter("FirmaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ÜrünlerEkle", ürünAdıParameter, gTINParameter, barcodeSizeParameter, sKT_XParameter, sKT_YParameter, lOT_XParameter, lOT_YParameter, gTIN_XParameter, gTIN_YParameter, sN_XParameter, sN_YParameter, gecikmeParameter, sKT_FONTParameter, sN_FONTParameter, lOT_FONTParameter, gTIN_FONTParameter, kolidekiShrinkParameter, shrinkdekiÜrünParameter, palettekiKoliParameter, firmaIDParameter);
        }
    
        public virtual int ÜrünlerGüncelle(string ürünAdı, string gTIN, Nullable<int> barcodeSize, string sKT_X, string sKT_Y, string lOT_X, string lOT_Y, string gTIN_X, string gTIN_Y, string sN_X, string sN_Y, string gecikme, string sKT_FONT, string sN_FONT, string lOT_FONT, string gTIN_FONT, Nullable<int> kolidekiShrink, Nullable<int> shrinkdekiÜrün, Nullable<int> palettekiKoli, Nullable<int> iD)
        {
            var ürünAdıParameter = ürünAdı != null ?
                new ObjectParameter("ÜrünAdı", ürünAdı) :
                new ObjectParameter("ÜrünAdı", typeof(string));
    
            var gTINParameter = gTIN != null ?
                new ObjectParameter("GTIN", gTIN) :
                new ObjectParameter("GTIN", typeof(string));
    
            var barcodeSizeParameter = barcodeSize.HasValue ?
                new ObjectParameter("BarcodeSize", barcodeSize) :
                new ObjectParameter("BarcodeSize", typeof(int));
    
            var sKT_XParameter = sKT_X != null ?
                new ObjectParameter("SKT_X", sKT_X) :
                new ObjectParameter("SKT_X", typeof(string));
    
            var sKT_YParameter = sKT_Y != null ?
                new ObjectParameter("SKT_Y", sKT_Y) :
                new ObjectParameter("SKT_Y", typeof(string));
    
            var lOT_XParameter = lOT_X != null ?
                new ObjectParameter("LOT_X", lOT_X) :
                new ObjectParameter("LOT_X", typeof(string));
    
            var lOT_YParameter = lOT_Y != null ?
                new ObjectParameter("LOT_Y", lOT_Y) :
                new ObjectParameter("LOT_Y", typeof(string));
    
            var gTIN_XParameter = gTIN_X != null ?
                new ObjectParameter("GTIN_X", gTIN_X) :
                new ObjectParameter("GTIN_X", typeof(string));
    
            var gTIN_YParameter = gTIN_Y != null ?
                new ObjectParameter("GTIN_Y", gTIN_Y) :
                new ObjectParameter("GTIN_Y", typeof(string));
    
            var sN_XParameter = sN_X != null ?
                new ObjectParameter("SN_X", sN_X) :
                new ObjectParameter("SN_X", typeof(string));
    
            var sN_YParameter = sN_Y != null ?
                new ObjectParameter("SN_Y", sN_Y) :
                new ObjectParameter("SN_Y", typeof(string));
    
            var gecikmeParameter = gecikme != null ?
                new ObjectParameter("Gecikme", gecikme) :
                new ObjectParameter("Gecikme", typeof(string));
    
            var sKT_FONTParameter = sKT_FONT != null ?
                new ObjectParameter("SKT_FONT", sKT_FONT) :
                new ObjectParameter("SKT_FONT", typeof(string));
    
            var sN_FONTParameter = sN_FONT != null ?
                new ObjectParameter("SN_FONT", sN_FONT) :
                new ObjectParameter("SN_FONT", typeof(string));
    
            var lOT_FONTParameter = lOT_FONT != null ?
                new ObjectParameter("LOT_FONT", lOT_FONT) :
                new ObjectParameter("LOT_FONT", typeof(string));
    
            var gTIN_FONTParameter = gTIN_FONT != null ?
                new ObjectParameter("GTIN_FONT", gTIN_FONT) :
                new ObjectParameter("GTIN_FONT", typeof(string));
    
            var kolidekiShrinkParameter = kolidekiShrink.HasValue ?
                new ObjectParameter("KolidekiShrink", kolidekiShrink) :
                new ObjectParameter("KolidekiShrink", typeof(int));
    
            var shrinkdekiÜrünParameter = shrinkdekiÜrün.HasValue ?
                new ObjectParameter("ShrinkdekiÜrün", shrinkdekiÜrün) :
                new ObjectParameter("ShrinkdekiÜrün", typeof(int));
    
            var palettekiKoliParameter = palettekiKoli.HasValue ?
                new ObjectParameter("PalettekiKoli", palettekiKoli) :
                new ObjectParameter("PalettekiKoli", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ÜrünlerGüncelle", ürünAdıParameter, gTINParameter, barcodeSizeParameter, sKT_XParameter, sKT_YParameter, lOT_XParameter, lOT_YParameter, gTIN_XParameter, gTIN_YParameter, sN_XParameter, sN_YParameter, gecikmeParameter, sKT_FONTParameter, sN_FONTParameter, lOT_FONTParameter, gTIN_FONTParameter, kolidekiShrinkParameter, shrinkdekiÜrünParameter, palettekiKoliParameter, iDParameter);
        }
    
        public virtual int ÜrünlerSil(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ÜrünlerSil", iDParameter);
        }
    }
}
